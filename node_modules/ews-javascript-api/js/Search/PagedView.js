"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var XmlAttributeNames_1 = require("../Core/XmlAttributeNames");
var ViewBase_1 = require("./ViewBase");
var OffsetBasePoint_1 = require("../Enumerations/OffsetBasePoint");
var Strings_1 = require("../Strings");
var PagedView = (function (_super) {
    __extends(PagedView, _super);
    function PagedView(pageSize, offset, offsetBasePoint) {
        if (offset === void 0) { offset = 0; }
        if (offsetBasePoint === void 0) { offsetBasePoint = OffsetBasePoint_1.OffsetBasePoint.Beginning; }
        _super.call(this);
        this.OffsetBasePoint = OffsetBasePoint_1.OffsetBasePoint.Beginning;
        this.pageSize = 0;
        //private offsetBasePoint: OffsetBasePoint; //not used as there is not difference in auto proerpty get or set.
        this.offset = 0;
        this.pageSize = pageSize || this.pageSize;
        this.Offset = offset || this.offset;
        this.OffsetBasePoint = offsetBasePoint || this.OffsetBasePoint;
    }
    Object.defineProperty(PagedView.prototype, "PageSize", {
        get: function () { return this.pageSize; },
        set: function (value) {
            if (value <= 0) {
                throw new Error(Strings_1.Strings.ValueMustBeGreaterThanZero);
            }
            this.pageSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagedView.prototype, "Offset", {
        get: function () { return this.offset; },
        set: function (value) {
            if (value >= 0) {
                this.offset = value;
            }
            else {
                throw new Error(Strings_1.Strings.OffsetMustBeGreaterThanZero);
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    PagedView.prototype.GetMaxEntriesReturned = function () { return this.PageSize; };
    PagedView.prototype.InternalValidate = function (request) { _super.prototype.InternalValidate.call(this, request); };
    PagedView.prototype.InternalWritePagingToJson = function (jsonView /*JsonObject*/, service) { throw new Error("PagedView.ts - InternalWritePagingToJson : Not implemented."); };
    PagedView.prototype.InternalWriteSearchSettingsToXml = function (writer, groupBy) {
        if (groupBy !== null && typeof groupBy !== 'undefined') {
            groupBy.WriteToXml(writer);
        }
    };
    PagedView.prototype.InternalWriteViewToXml = function (writer) {
        _super.prototype.InternalWriteViewToXml.call(this, writer);
        writer.WriteAttributeValue(XmlAttributeNames_1.XmlAttributeNames.Offset, this.Offset);
        writer.WriteAttributeValue(XmlAttributeNames_1.XmlAttributeNames.BasePoint, OffsetBasePoint_1.OffsetBasePoint[this.OffsetBasePoint]);
    };
    PagedView.prototype.WriteGroupingToJson = function (service, groupBy) { throw new Error("PagedView.ts - WriteGroupingToJson : Not implemented."); };
    PagedView.prototype.WriteOrderByToXml = function (writer) { };
    return PagedView;
}(ViewBase_1.ViewBase));
exports.PagedView = PagedView;
