"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ComplexProperty_1 = require("./ComplexProperty");
var DelegatePermissions = (function (_super) {
    __extends(DelegatePermissions, _super);
    function DelegatePermissions() {
        _super.apply(this, arguments);
    }
    DelegatePermissions.prototype.InternalToJson = function (service) { throw new Error("DelegatePermissions.ts - InternalToJson : Not implemented."); };
    DelegatePermissions.prototype.LoadFromJson = function (jsonProperty, service) { throw new Error("DelegatePermissions.ts - LoadFromJson : Not implemented."); };
    DelegatePermissions.prototype.Reset = function () { throw new Error("DelegatePermissions.ts - Reset : Not implemented."); };
    DelegatePermissions.prototype.ReadElementsFromXmlJsObject = function (reader) { throw new Error("DelegatePermissions.ts - TryReadElementFromXmlJsObject : Not implemented."); };
    DelegatePermissions.prototype.ValidateAddDelegate = function () { throw new Error("DelegatePermissions.ts - ValidateAddDelegate : Not implemented."); };
    DelegatePermissions.prototype.ValidateUpdateDelegate = function () { throw new Error("DelegatePermissions.ts - ValidateUpdateDelegate : Not implemented."); };
    DelegatePermissions.prototype.WriteElementsToXml = function (writer) { throw new Error("DelegatePermissions.ts - WriteElementsToXml : Not implemented."); };
    DelegatePermissions.prototype.WritePermissionToJson = function (jsonProperty, elementName) { throw new Error("DelegatePermissions.ts - WritePermissionToJson : Not implemented."); };
    DelegatePermissions.prototype.WritePermissionToXml = function (writer, xmlElementName) { throw new Error("DelegatePermissions.ts - WritePermissionToXml : Not implemented."); };
    return DelegatePermissions;
}(ComplexProperty_1.ComplexProperty));
exports.DelegatePermissions = DelegatePermissions;
